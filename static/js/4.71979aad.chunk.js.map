{"version":3,"sources":["utils/validator/validators.ts","components/Common/FormsStyles/FormControls.tsx","HOC/WithAuthRedirect.js","components/Content/Profile/Profile.module.css","components/Content/Profile/Post/PostList/PostItem/PostItem.jsx","components/Content/Profile/Post/PostList/PostList.jsx","components/Content/Profile/Post/PostCreateForm/PostForm/PostForm.jsx","components/Content/Profile/Post/PostCreateForm/PostCreate.jsx","components/Content/Profile/Post/Post.jsx","components/Content/Profile/ProfileInfo/ProfileStatus/ProfileStatusHOOKS.jsx","components/Content/Profile/ProfileInfo/ProfileInfo.jsx","components/Content/Profile/Profile.jsx","components/Content/Profile/ProfileContainer.jsx"],"names":["requeiredField","value","maxLengthCreator","maxLength","length","Textarea","input","meta","props","hasError","touched","error","className","Input","mapStateToPropsForRedirect","state","isAuth","auth","WithAuthRedirect","Component","RedirectComponent","this","to","React","connect","module","exports","PostItem","src","logo","alt","login","text","likes","PostList","postItems","posts","map","elem","name","post","id","maxLength10","PostReduxForm","reduxForm","form","onSubmit","e","preventDefault","handleSubmit","reset","Field","component","validate","CreatePost","formData","newPost","addPost","Post","ProfileStatusHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onBlur","updateStatus","onChange","currentTarget","autoFocus","onClick","isOwner","ProfileInfo","item","profile","profileInfo","Preloader","contactsArr","key","contacts","push","c","Math","floor","random","photos","small","htmlFor","type","target","files","savePhoto","fullName","lookingForAJob","lookingForAJobDescription","Profile","Pro","ProfileContainer","setProfileInfo","match","params","userId","getProfileStatus","refreshProfile","prevProps","prevState","snapshot","updateProfileStatus","compose","profileData","postUsers","setProfileInfoThunkCreator","getProfileStatusThunkCreator","updateProfileStatusThunkCreator","profileActions","addPostActionCreator","savePhotoThunkCreator","withRouter"],"mappings":"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","file":"static/js/4.71979aad.chunk.js","sourcesContent":["export type ValidatorsRequiredType = (value: string) => string | undefined\r\n\r\nexport const requeiredField: ValidatorsRequiredType = (value) => {\r\n    if (value) {\r\n        return undefined\r\n    }\r\n    return 'Field is required'\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength: number): ValidatorsRequiredType => (value: string) => {   \r\n    if (value) {\r\n        if (value.length > maxLength) {\r\n            return `Max length is ${maxLength}`\r\n        }\r\n        return undefined\r\n    } \r\n}","import { WrappedFieldProps } from 'redux-form'\r\nimport './FormControls.css'\r\n\r\nexport const Textarea: React.FC<WrappedFieldProps> = ({input, meta, ...props}) => {\r\n    const hasError = meta.touched && meta.error\r\n    return (\r\n        <div className = { hasError ? 'form-control error' : 'form-control'}>\r\n            <textarea {...input} {...props} />\r\n            { hasError && <span className = {'error-messege'} >{meta.error}</span>}  \r\n        </div>\r\n    )\r\n}\r\nexport const Input: React.FC<WrappedFieldProps> = ({input, meta, ...props}) => {\r\n    const hasError = meta.touched && meta.error\r\n    return (\r\n        <div className = { hasError ? 'form-control error' : 'form-control'}>\r\n            <input {...input} {...props} />\r\n            { hasError && <span className = {'error-messege'} >{meta.error}</span>}  \r\n        </div>\r\n    )\r\n}","import React from \"react\"\r\nimport { connect } from \"react-redux\"\r\nimport { Redirect } from \"react-router\"\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport const WithAuthRedirect = (Component) => {\r\n    \r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) {\r\n                return <Redirect to='/Content/Login' />\r\n            }\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect) (RedirectComponent)\r\n\r\n    return ConnectedAuthRedirectComponent\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__2D5ez\"};","import logo from '../../../../../../Rlogo.png'\r\nimport './PostItem.css'\r\n\r\nconst PostItem = (props) => {\r\n    return (\r\n        <div className=\"item-post post-list__item-post\">\r\n            <img src={logo} alt=\"logo\" className=\"logo avatar item-post__avatar\" />\r\n            <h4 className=\"item-post__login\">{props.login}</h4>\r\n            <p className=\"item-post__text\">{props.text}</p>\r\n            <div className = \"item-post__action\">\r\n               <p className = \"item-post__likes-count\">{props.likes}</p>\r\n               <span className = \"like-img\">&#9829;</span> \r\n            </div>\r\n            \r\n        </div>\r\n    );\r\n}\r\nexport default PostItem","import PostItem from './PostItem/PostItem';\r\nimport './PostList.css'\r\n\r\nconst PostList = (props) => {\r\n    \r\n    const postUsers = props.posts\r\n    \r\n    const postItems = postUsers.map(elem => {\r\n        return <PostItem login={elem.name} text = {elem.post} likes = {elem.likes} key = {elem.id}/>\r\n    })\r\n    return (\r\n        <div className=\"post-list profile__post-list\">\r\n            {postItems}\r\n        </div>\r\n    );\r\n}\r\nexport default PostList","import { Field, reduxForm } from \"redux-form\"\r\nimport { maxLengthCreator, requeiredField } from \"../../../../../../utils/validator/validators\"\r\nimport { Textarea } from \"../../../../../Common/FormsStyles/FormControls\"\r\nimport './PostForm.css'\r\n\r\nconst maxLength10 = maxLengthCreator(10)\r\n\r\nconst PostForm = (props) => {\r\n    \r\n    const onSubmit = (e) => {\r\n        e.preventDefault()\r\n        props.handleSubmit()\r\n        props.reset()\r\n    }\r\n\r\n    return (\r\n        <form className=\"create-post\" onSubmit = {onSubmit} >\r\n            <Field className=\"input-post\" component = {Textarea} name = {'newPost'} validate = {[requeiredField, maxLength10]} />\r\n            <button className=\"btn-send post__btn\" >Send</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport const PostReduxForm = reduxForm({form: 'post'}) (PostForm)\r\n","import './PostCreate.css'\r\nimport React from 'react'\r\nimport { PostReduxForm } from './PostForm/PostForm'\r\nimport { reset } from 'redux-form'\r\n\r\nconst CreatePost = (props) => {\r\n\r\n    const onSubmit = (formData) => {\r\n        \r\n        if (formData.newPost) {\r\n            props.addPost(formData.newPost) \r\n            \r\n        }   \r\n    }\r\n    \r\n    return (\r\n        <div className=\"create-post\">\r\n            <PostReduxForm onSubmit={onSubmit} />\r\n        </div>\r\n    );\r\n}\r\nexport default CreatePost","import './Post.css'\r\nimport PostList from './PostList/PostList';\r\nimport CreatePost from './PostCreateForm/PostCreate';\r\n\r\nconst Post = (props) => {\r\n    \r\n    return (\r\n        <div className=\"post profile__post\">\r\n            <h3 className=\"post__title\">My posts</h3>\r\n            <CreatePost addPost = {props.addPost} /> \r\n            <PostList posts = {props.posts}/>        \r\n        </div>\r\n    );\r\n}\r\nexport default Post","import React, { useEffect, useState } from \"react\"\r\nimport './ProfileStatus.css'\r\n\r\nconst ProfileStatusHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false)\r\n    let [status, setStatus] = useState(props.status)\r\n\r\n    useEffect( () => {\r\n        setStatus(props.status)\r\n    }, [props.status] )\r\n\r\n    const activateEditMode = () => { \r\n        if (!props.isOwner) {\r\n           setEditMode(true) \r\n        }    \r\n    }\r\n    \r\n    const deActivateEditMode = () => { \r\n        setEditMode(false)\r\n        props.updateStatus(status) \r\n    }\r\n    const updateStatus = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <div className='personal-info__status'>\r\n            {editMode\r\n                ? <input onBlur = {deActivateEditMode} onChange = {updateStatus} value = {status} autoFocus={true} className='profile-status__create' />\r\n                : <h3 onClick = {activateEditMode} className='profile-status__title' >{props.status ? props.status : 'Status '}</h3>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatusHooks","import logo from '../../../../Rlogo.png'\r\nimport Preloader from '../../../Common/Preloader/Preloader'\r\nimport './ProfileInfo.css'\r\nimport ProfileStatusHooks from './ProfileStatus/ProfileStatusHOOKS'\r\n\r\nconst ProfileInfo = (props) => {\r\n    \r\n    const profile = props.profileInfo\r\n    \r\n    if (!profile) {\r\n        return <Preloader />\r\n    }\r\n\r\n    let item\r\n    let contactsArr = []\r\n    for (let key in profile.contacts) {\r\n        if (profile.contacts[key] !== null && profile.contacts[key] !== '') {\r\n            item = key + ': ' + profile.contacts[key]\r\n            contactsArr.push(item)\r\n        }     \r\n    }\r\n    let contacts = contactsArr.map(c => {\r\n        return <h3 className=\"personal-info__item\" key={Math.floor(Math.random() * 1000)}>{c}</h3>\r\n    })\r\n    \r\n    const changeAvatar = (e) => {\r\n        if(e.target.files.length) {\r\n            props.savePhoto(e.target.files[0])\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='profile-info'>\r\n            <div className = {'profile-info__avatar'}>\r\n                <img src={profile.photos.small ? profile.photos.small : logo} alt=\"logo\" className=\"logo avatar profile__avatar\" />\r\n                {!props.isOwner && (\r\n                    <div className={'change-avatar'}>\r\n                        <label htmlFor = {'file'} className={'change-avatar__element'}>Change The Photo</label>\r\n                        <input type={'file'} className={'change-avatar__input'} onChange={changeAvatar} id = {'file'} />\r\n                    </div>\r\n                )}\r\n            </div>\r\n            <div className=\"personal-info profile__info\">\r\n                <h3 className=\"personal-info__item\" key = {Math.floor(Math.random()*1000)}>{profile.fullName}</h3>\r\n                <ProfileStatusHooks isOwner = {props.isOwner} status ={props.status} updateStatus = {props.updateStatus} />\r\n                <h3 className=\"personal-info__item\" key = {Math.floor(Math.random()*1000)}>{profile.lookingForAJob ? 'I am looking for a job' : 'I have a job'}</h3>\r\n                <h3 className=\"personal-info__item\" key = {Math.floor(Math.random()*1000)}>{profile.lookingForAJobDescription && profile.lookingForAJobDescription }</h3>\r\n                <div className = 'personal-info__item-contacts'>\r\n                   {contacts}    \r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default ProfileInfo","import Post from './Post/Post';\r\nimport Pro from './Profile.module.css'\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\n\r\nconst Profile = (props) => { \r\n    \r\n    return (\r\n        <div className={Pro.profile}>\r\n            <ProfileInfo profileInfo = {props.profileInfo} updateStatus = {props.updateStatus} status = {props.status} savePhoto = {props.savePhoto} isOwner = {props.isOwner} />\r\n            <Post  addPost = {props.addPost} posts = {props.posts} />    \r\n        </div>   \r\n    );   \r\n}\r\n\r\nexport default Profile","import Profile from \"./Profile\";\r\nimport React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { getProfileStatusThunkCreator, profileActions, savePhotoThunkCreator, setProfileInfoThunkCreator, updateProfileStatusThunkCreator } from \"../../../redux/profile-reducer\";\r\nimport { withRouter } from \"react-router\";\r\nimport { WithAuthRedirect } from \"../../../HOC/WithAuthRedirect\";\r\nimport { compose } from \"redux\";\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    refreshProfile() {\r\n        this.props.setProfileInfo(this.props.match.params.userId, this.props.auth.userId)\r\n        this.props.getProfileStatus(this.props.match.params.userId, this.props.auth.userId)\r\n    }\r\n    componentDidMount() {\r\n        this.refreshProfile()\r\n    }\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.props.match.params.userId !== prevProps.match.params.userId) {\r\n            this.refreshProfile()\r\n        }    \r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Profile\r\n                    profileInfo={this.props.profileInfo}\r\n                    status={this.props.status}\r\n                    updateStatus={this.props.updateProfileStatus}\r\n                    posts = {this.props.posts}\r\n                    auth = {this.props.auth}\r\n                    addPost = {this.props.addPost}\r\n                    isOwner = {this.props.match.params.userId}\r\n                    savePhoto = {this.props.savePhoto}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({    \r\n    profileInfo: state.profileData.profileInfo,\r\n    auth: state.auth,\r\n    status: state.profileData.status,\r\n    posts: state.profileData.postUsers\r\n})\r\n\r\nexport default compose (\r\n    connect(mapStateToProps, {setProfileInfo: setProfileInfoThunkCreator, \r\n        getProfileStatus: getProfileStatusThunkCreator, \r\n        updateProfileStatus: updateProfileStatusThunkCreator,\r\n        addPost: profileActions.addPostActionCreator,\r\n        savePhoto: savePhotoThunkCreator\r\n    }),\r\n    withRouter,\r\n    WithAuthRedirect) (ProfileContainer)\r\n\r\n\r\n\r\n\r\n\r\n// let AuthRedirectComponent = WithAuthRedirect(ProfileContainer)\r\n\r\n// let UrlDataContainer = withRouter(AuthRedirectComponent)\r\n\r\n// export default connect(mapStateToProps, {setProfileInfo: setProfileInfoThunkCreator}) (UrlDataContainer)"],"sourceRoot":""}