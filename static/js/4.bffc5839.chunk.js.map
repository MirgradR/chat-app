{"version":3,"sources":["utils/validator/validators.js","components/Common/FormsStyles/FormControls.jsx","HOC/WithAuthRedirect.js","components/Content/Profile/Profile.module.css","components/Content/Profile/Post/PostList/PostItem/PostItem.jsx","components/Content/Profile/Post/PostList/PostList.jsx","components/Content/Profile/Post/PostCreateForm/PostForm/PostForm.jsx","components/Content/Profile/Post/PostCreateForm/PostCreate.jsx","components/Content/Profile/Post/Post.jsx","../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/Content/Profile/ProfileInfo/ProfileStatus/ProfileStatusHOOKS.jsx","components/Content/Profile/ProfileInfo/ProfileInfo.jsx","components/Content/Profile/Profile.jsx","components/Content/Profile/ProfileContainer.jsx"],"names":["requeiredField","value","maxLengthCreator","maxLength","length","Textarea","input","meta","props","hasError","touched","error","className","Input","mapStateToPropsForRedirect","state","isAuth","auth","WithAuthRedirect","Component","RedirectComponent","this","to","React","connect","module","exports","PostItem","src","logo","alt","login","text","likes","PostList","postItems","posts","map","elem","name","post","id","maxLength10","PostReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","component","validate","CreatePost","formData","newPost","addPost","Post","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","err","unsupportedIterableToArray","TypeError","ProfileStatusHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onBlur","updateStatus","onChange","e","currentTarget","autoFocus","onClick","ProfileInfo","item","profile","profileInfo","Preloader","contactsArr","key","contacts","c","Math","floor","random","photos","small","fullName","aboutMe","lookingForAJob","Profile","Pro","ProfileContainer","setProfileInfo","match","params","userId","getProfileStatus","updateProfileStatus","compose","profileData","postUsers","setProfileInfoThunkCreator","getProfileStatusThunkCreator","updateProfileStatusThunkCreator","addPostActionCreator","withRouter"],"mappings":"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","file":"static/js/4.bffc5839.chunk.js","sourcesContent":["\r\n\r\nexport const requeiredField = value => {\r\n    if (value) {\r\n        return undefined\r\n    }\r\n    return 'Field is required'\r\n}\r\n\r\n\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value.length > maxLength) {\r\n        return `Max length is ${maxLength}` \r\n    }\r\n    return undefined\r\n}","import './FormControls.css'\r\n\r\nexport const Textarea = ({input, meta, ...props}) => {\r\n    const hasError = meta.touched && meta.error\r\n    return (\r\n        <div className = { hasError ? 'form-control error' : 'form-control'}>\r\n            <textarea {...input} {...props} />\r\n            { hasError && <span className = {'error-messege'} >{meta.error}</span>}  \r\n        </div>\r\n    )\r\n}\r\nexport const Input = ({input, meta, ...props}) => {\r\n    const hasError = meta.touched && meta.error\r\n    return (\r\n        <div className = { hasError ? 'form-control error' : 'form-control'}>\r\n            <input {...input} {...props} />\r\n            { hasError && <span className = {'error-messege'} >{meta.error}</span>}  \r\n        </div>\r\n    )\r\n}","import React from \"react\"\r\nimport { connect } from \"react-redux\"\r\nimport { Redirect } from \"react-router\"\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport const WithAuthRedirect = (Component) => {\r\n    \r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) {\r\n                return <Redirect to='/Content/Login' />\r\n            }\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect) (RedirectComponent)\r\n\r\n    return ConnectedAuthRedirectComponent\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__2D5ez\"};","import logo from '../../../../../../Rlogo.png'\r\nimport './PostItem.css'\r\n\r\nconst PostItem = (props) => {\r\n    return (\r\n        <div className=\"item-post post-list__item-post\">\r\n            <img src={logo} alt=\"logo\" className=\"logo avatar item-post__avatar\" />\r\n            <h4 className=\"item-post__login\">{props.login}</h4>\r\n            <p className=\"item-post__text\">{props.text}</p>\r\n            <div className = \"item-post__action\">\r\n               <p className = \"item-post__likes-count\">{props.likes}</p>\r\n               <span className = \"like-img\">&#9829;</span> \r\n            </div>\r\n            \r\n        </div>\r\n    );\r\n}\r\nexport default PostItem","import PostItem from './PostItem/PostItem';\r\nimport './PostList.css'\r\n\r\nconst PostList = (props) => {\r\n    \r\n    const postUsers = props.posts\r\n    \r\n    const postItems = postUsers.map(elem => {\r\n        return <PostItem login={elem.name} text = {elem.post} likes = {elem.likes} key = {elem.id}/>\r\n    })\r\n    return (\r\n        <div className=\"post-list profile__post-list\">\r\n            {postItems}\r\n        </div>\r\n    );\r\n}\r\nexport default PostList","import { Field, reduxForm } from \"redux-form\"\r\nimport { maxLengthCreator, requeiredField } from \"../../../../../../utils/validator/validators\"\r\nimport { Textarea } from \"../../../../../Common/FormsStyles/FormControls\"\r\nimport './PostForm.css'\r\n\r\nconst maxLength10 = maxLengthCreator(10)\r\n\r\nconst PostForm = (props) => {\r\n  \r\n    return (\r\n        <form className=\"create-post\" onSubmit = {props.handleSubmit} >\r\n            <Field className=\"input-post\" component = {Textarea} name = {'newPost'} validate = {[requeiredField, maxLength10]} />\r\n            <button className=\"btn-send post__btn\" >Send</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport const PostReduxForm = reduxForm({form: 'post'}) (PostForm)\r\n","import './PostCreate.css'\r\nimport React from 'react'\r\nimport { PostReduxForm } from './PostForm/PostForm'\r\n\r\nconst CreatePost = (props) => {\r\n\r\n    const onSubmit = (formData) => {\r\n        if (formData.newPost) {\r\n            props.addPost(formData.newPost) \r\n        }   \r\n    }\r\n    \r\n    return (\r\n        <div className=\"create-post\">\r\n            <PostReduxForm onSubmit={onSubmit} />\r\n        </div>\r\n    );\r\n}\r\nexport default CreatePost","import './Post.css'\r\nimport PostList from './PostList/PostList';\r\nimport CreatePost from './PostCreateForm/PostCreate';\r\n\r\nconst Post = (props) => {\r\n    \r\n    return (\r\n        <div className=\"post profile__post\">\r\n            <h3 className=\"post__title\">My posts</h3>\r\n            <CreatePost addPost = {props.addPost} /> \r\n            <PostList posts = {props.posts}/>        \r\n        </div>\r\n    );\r\n}\r\nexport default Post","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React, { useEffect, useState } from \"react\"\r\nimport './ProfileStatus.css'\r\n\r\nconst ProfileStatusHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false)\r\n    let [status, setStatus] = useState(props.status)\r\n\r\n    useEffect( () => {\r\n        setStatus(props.status)\r\n    }, [props.status] )\r\n\r\n    const activateEditMode = () => { setEditMode(true) }\r\n    \r\n    const deActivateEditMode = () => { \r\n        setEditMode(false)\r\n        props.updateStatus(status) \r\n    }\r\n    const updateStatus = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <div className='personal-info__status'>\r\n            {editMode\r\n                ? <input onBlur = {deActivateEditMode} onChange = {updateStatus} value = {status} autoFocus={true} className='profile-status__create' />\r\n                : <h3 onClick = {activateEditMode} className='profile-status__title' >{props.status ? props.status : 'Status '}</h3>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatusHooks","import logo from '../../../../Rlogo.png'\r\nimport Preloader from '../../../Common/Preloader/Preloader'\r\nimport './ProfileInfo.css'\r\nimport ProfileStatusHooks from './ProfileStatus/ProfileStatusHOOKS'\r\n\r\nconst ProfileInfo = (props) => {\r\n    \r\n    const profile = props.profileInfo\r\n    \r\n    if (!profile) {\r\n        return <Preloader />\r\n    }\r\n\r\n    let item\r\n    let contactsArr = []\r\n    for (let key in profile.contacts) {\r\n        if (profile.contacts[key] !== null) {\r\n            item = key + ': ' + profile.contacts[key]\r\n            contactsArr.push(item)\r\n        }     \r\n    }\r\n    let contacts = contactsArr.map(c => {\r\n        return <h3 className=\"personal-info__item\" key={Math.floor(Math.random() * 1000)}>{c}</h3>\r\n    })\r\n    \r\n    return (\r\n        <div className='profile-info'>\r\n            <img src={profile.photos.small ? profile.photos.small : logo} alt=\"logo\" className=\"logo avatar profile__avatar\" />\r\n            <div className=\"personal-info profile__info\">\r\n                <h3 className=\"personal-info__item\" key = {Math.floor(Math.random()*1000)}>{profile.fullName}</h3>\r\n                <ProfileStatusHooks status ={props.status} updateStatus = {props.updateStatus} />\r\n                <h3 className=\"personal-info__item\" key = {Math.floor(Math.random()*1000)}>{profile.aboutMe}</h3>\r\n                <h3 className=\"personal-info__item\" key = {Math.floor(Math.random()*1000)}>{profile.lookingForAJob ? 'I am looking for a job' : 'I have a job'}</h3>\r\n                <div className = 'personal-info__item-contacts'>\r\n                   {contacts} \r\n                   \r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default ProfileInfo","import Post from './Post/Post';\r\nimport Pro from './Profile.module.css'\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\n\r\nconst Profile = (props) => { \r\n    \r\n    return (\r\n        <div className={Pro.profile}>\r\n            <ProfileInfo profileInfo = {props.profileInfo} updateStatus = {props.updateStatus} status = {props.status} />\r\n            <Post  addPost = {props.addPost} posts = {props.posts} />    \r\n        </div>   \r\n    );   \r\n}\r\n\r\nexport default Profile","import Profile from \"./Profile\";\r\nimport React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { addPostActionCreator, getProfileStatusThunkCreator, setProfileInfoThunkCreator, updateProfileStatusThunkCreator } from \"../../../redux/profile-reducer\";\r\nimport { withRouter } from \"react-router\";\r\nimport { WithAuthRedirect } from \"../../../HOC/WithAuthRedirect\";\r\nimport { compose } from \"redux\";\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        this.props.setProfileInfo(this.props.match.params.userId, this.props.auth.userId)\r\n        this.props.getProfileStatus(this.props.match.params.userId, this.props.auth.userId)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Profile\r\n                    profileInfo={this.props.profileInfo}\r\n                    status={this.props.status}\r\n                    updateStatus={this.props.updateProfileStatus}\r\n                    posts = {this.props.posts}\r\n                    auth = {this.props.auth}\r\n                    addPost = {this.props.addPost}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({    \r\n    profileInfo: state.profileData.profileInfo,\r\n    auth: state.auth,\r\n    status: state.profileData.status,\r\n    posts: state.profileData.postUsers\r\n})\r\n\r\nexport default compose (\r\n    connect(mapStateToProps, {setProfileInfo: setProfileInfoThunkCreator, \r\n        getProfileStatus: getProfileStatusThunkCreator, \r\n        updateProfileStatus: updateProfileStatusThunkCreator,\r\n        addPost: addPostActionCreator,\r\n    }),\r\n    withRouter,\r\n    WithAuthRedirect) (ProfileContainer)\r\n\r\n\r\n\r\n\r\n\r\n// let AuthRedirectComponent = WithAuthRedirect(ProfileContainer)\r\n\r\n// let UrlDataContainer = withRouter(AuthRedirectComponent)\r\n\r\n// export default connect(mapStateToProps, {setProfileInfo: setProfileInfoThunkCreator}) (UrlDataContainer)"],"sourceRoot":""}