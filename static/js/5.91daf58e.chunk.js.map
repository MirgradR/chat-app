{"version":3,"sources":["utils/validator/validators.js","components/Common/FormsStyles/FormControls.jsx","components/Content/Messages/Chat/ChatForm/ChatForm.jsx","components/Content/Messages/Chat/ChatSMS/ChatSMS.jsx","components/Content/Messages/Chat/Chat.jsx","components/Content/Messages/Dialogs/DialogsList/DialogsItem/DialogsItem.jsx","components/Content/Messages/Dialogs/DialogsList/DialogsList.jsx","components/Content/Messages/Dialogs/Dialogs.jsx","components/Content/Messages/Messages.jsx","components/Content/Messages/MessagesContainer.jsx"],"names":["requeiredField","value","maxLengthCreator","maxLength","length","Textarea","input","meta","props","hasError","touched","error","className","Input","maxLength50","ChatReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","component","name","validate","ChatSMS","src","ava","alt","users","text","Chat","chatItems","chatSMS","map","elem","id","FormData","newMessage","addMessage","DialogsItem","user","idU","to","DialogsList","dialogItems","Dialogs","Messages","usersList","MessagesContainer","connect","state","messagesData","addMessageActionCreator"],"mappings":"kIAEA,oEAAO,IAAMA,EAAiB,SAAAC,GAC1B,IAAIA,EAGJ,MAAO,qBAKEC,EAAmB,SAACC,GAAD,OAAe,SAACF,GAC5C,GAAIA,EAAMG,OAASD,EACf,MAAM,iBAAN,OAAwBA,M,+KCXnBE,EAAW,SAAC,GAA6B,IAA5BC,EAA2B,EAA3BA,MAAOC,EAAoB,EAApBA,KAASC,EAAW,iBAC3CC,EAAWF,EAAKG,SAAWH,EAAKI,MACtC,OACI,sBAAKC,UAAcH,EAAW,qBAAuB,eAArD,UACI,oDAAcH,GAAWE,IACvBC,GAAY,sBAAMG,UAAa,gBAAnB,SAAsCL,EAAKI,YAIxDE,EAAQ,SAAC,GAA6B,IAA5BP,EAA2B,EAA3BA,MAAOC,EAAoB,EAApBA,KAASC,EAAW,iBACxCC,EAAWF,EAAKG,SAAWH,EAAKI,MACtC,OACI,sBAAKC,UAAcH,EAAW,qBAAuB,eAArD,UACI,iDAAWH,GAAWE,IACpBC,GAAY,sBAAMG,UAAa,gBAAnB,SAAsCL,EAAKI,a,yPCZ/DG,EAAcZ,YAAiB,IAWxBa,EAAgBC,YAAU,CAACC,KAAM,QAAjBD,EATZ,SAACR,GACd,OACI,uBAAMU,SAAYV,EAAMW,aAAxB,UACI,cAACC,EAAA,EAAD,CAAOR,UAAU,gBAAgBS,UAAahB,IAAUiB,KAAQ,aAAcC,SAAY,CAACvB,IAAgBc,KAC3G,wBAAQF,UAAU,wBAAlB,wB,iBCGGY,EAVC,SAAChB,GACb,OACI,qBAAII,UAAY,eAAhB,UACI,qBAAKa,IAAOC,IAAKC,IAAOD,IAAKd,UAAY,qCACzC,oBAAIA,UAAY,sBAAhB,SAAuCJ,EAAMoB,QAC7C,mBAAGhB,UAAY,qBAAf,SAAqCJ,EAAMqB,WCiBxCC,EApBF,SAACtB,GAEV,IAMMuB,EAAYvB,EAAMwB,QAAQC,KAAI,SAAAC,GAChC,OAAO,cAAC,EAAD,CAASN,MAAS,SAAWC,KAAQK,EAAKL,MAAaK,EAAKC,OAEvE,OACI,sBAAKvB,UAAY,sBAAjB,UACKmB,EACD,qBAAKnB,UAAY,uBAAjB,SACI,cAACG,EAAD,CAAeG,SAbR,SAACkB,GACZA,EAASC,YACT7B,EAAM8B,WAAWF,EAASC,qB,wBCCvBE,EAPK,SAAC/B,GACjB,IAAMoB,EAAQpB,EAAMgC,KACdL,EAAK3B,EAAMiC,IACjB,OACI,cAAC,IAAD,CAASC,GAAM,qBAAuBP,EAAIvB,UAAY,qBAAtD,SAA4EgB,KCOrEe,G,OAXK,SAACnC,GACjB,IACMoC,EADOpC,EAAMoB,MACMK,KAAI,SAAAC,GACzB,OAAO,cAAC,EAAD,CAAaM,KAAQN,EAAKZ,KAAMmB,IAAOP,EAAKC,IAAWD,EAAKC,OAEvE,OACI,oBAAIvB,UAAU,eAAd,SACKgC,MCCEC,EARC,SAACrC,GACb,OACI,sBAAKI,UAAU,4BAAf,UACI,oBAAIA,UAAY,gBAAhB,qBACA,cAAC,EAAD,CAAagB,MAASpB,EAAMoB,YCMzBkB,G,OATE,SAACtC,GAEd,OACI,sBAAKI,UAAY,6BAAjB,UACI,cAAC,EAAD,CAASgB,MAASpB,EAAMuC,YACxB,cAAC,EAAD,CAAMf,QAAWxB,EAAMwB,QAASM,WAAc9B,EAAM8B,kBCG1DU,EAAoBC,aAPF,SAACC,GACrB,MAAO,CACHH,UAAWG,EAAMC,aAAaJ,UAC9Bf,QAASkB,EAAMC,aAAanB,WAIe,CAACM,WAAYc,KAAtCH,CAAiEH,GAE5EE","file":"static/js/5.91daf58e.chunk.js","sourcesContent":["\r\n\r\nexport const requeiredField = value => {\r\n    if (value) {\r\n        return undefined\r\n    }\r\n    return 'Field is required'\r\n}\r\n\r\n\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value.length > maxLength) {\r\n        return `Max length is ${maxLength}` \r\n    }\r\n    return undefined\r\n}","import './FormControls.css'\r\n\r\nexport const Textarea = ({input, meta, ...props}) => {\r\n    const hasError = meta.touched && meta.error\r\n    return (\r\n        <div className = { hasError ? 'form-control error' : 'form-control'}>\r\n            <textarea {...input} {...props} />\r\n            { hasError && <span className = {'error-messege'} >{meta.error}</span>}  \r\n        </div>\r\n    )\r\n}\r\nexport const Input = ({input, meta, ...props}) => {\r\n    const hasError = meta.touched && meta.error\r\n    return (\r\n        <div className = { hasError ? 'form-control error' : 'form-control'}>\r\n            <input {...input} {...props} />\r\n            { hasError && <span className = {'error-messege'} >{meta.error}</span>}  \r\n        </div>\r\n    )\r\n}","import { Field, reduxForm } from \"redux-form\"\r\nimport { maxLengthCreator, requeiredField } from \"../../../../../utils/validator/validators\"\r\nimport { Textarea } from \"../../../../Common/FormsStyles/FormControls\"\r\n\r\nconst maxLength50 = maxLengthCreator(50)\r\n\r\nconst ChatForm = (props) => {\r\n    return (\r\n        <form onSubmit = {props.handleSubmit} >\r\n            <Field className=\"input-message\" component = {Textarea} name = {'newMessage'} validate = {[requeiredField, maxLength50]}  />\r\n            <button className=\"btn-send message__btn\">Send</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport const ChatReduxForm = reduxForm({form: 'chat'}) (ChatForm)\r\n","import './ChatSMS.css'\r\nimport ava from '../../../../../Rlogo.png'\r\n\r\nconst ChatSMS = (props) => {\r\n    return (\r\n        <li className = \"chat-message\">\r\n            <img src = {ava} alt = {ava} className = \"avatar logo chat-message__avatar\"/>\r\n            <h3 className = \"chat-message__login\">{props.users}</h3>\r\n            <p className = \"chat-message__text\">{props.text}</p>\r\n        </li>\r\n    );\r\n}\r\n\r\nexport default ChatSMS","import React from 'react';\r\nimport './Chat.css'\r\nimport { ChatReduxForm } from './ChatForm/ChatForm';\r\nimport ChatSMS from './ChatSMS/ChatSMS';\r\n\r\nconst Chat = (props) => {\r\n\r\n    const addMessage = (FormData) => {\r\n        if (FormData.newMessage) {\r\n            props.addMessage(FormData.newMessage)\r\n        }       \r\n    }\r\n\r\n    const chatItems = props.chatSMS.map(elem => {\r\n        return <ChatSMS users = {'Ruslan'}  text = {elem.text} key = {elem.id}/>    \r\n    })\r\n    return (\r\n        <div className = \"chat messages__chat\">\r\n            {chatItems}\r\n            <div className = \"chat__create-message\">\r\n                <ChatReduxForm onSubmit = {addMessage} />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default Chat","import './DialogsItem.css'\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst DialogsItem = (props) => {\r\n    const users = props.user\r\n    const id = props.idU\r\n    return (\r\n        <NavLink to = {\"/Content/Messages/\" + id} className = \"dialogs-list__item\">{users}</NavLink>\r\n    );\r\n}\r\nexport default DialogsItem","import DialogsItem from './DialogsItem/DialogsItem';\r\nimport './DialogsList.css'\r\n\r\nconst DialogsList = (props) => {\r\n    const user = props.users\r\n    const dialogItems = user.map(elem => {\r\n        return <DialogsItem user = {elem.name} idU = {elem.id} key = {elem.id}/>\r\n    })\r\n    return (\r\n        <ul className=\"dialogs-list\">\r\n            {dialogItems}\r\n        </ul>\r\n    );\r\n}\r\nexport default DialogsList","import './Dialogs.css'\r\nimport DialogsList from './DialogsList/DialogsList';\r\n\r\nconst Dialogs = (props) => {  \r\n    return (\r\n        <div className=\"dialogs messages__dialogs\">\r\n            <h2 className = \"dialogs-title\">Dialogs</h2>\r\n            <DialogsList users = {props.users}/>\r\n        </div>\r\n    );\r\n}\r\nexport default Dialogs","import Chat from './Chat/Chat';\r\nimport Dialogs from './Dialogs/Dialogs';\r\nimport './Messages.css'\r\n\r\nconst Messages = (props) => {\r\n    \r\n    return (\r\n        <div className = \"messages content__messages\">\r\n            <Dialogs users = {props.usersList}/>\r\n            <Chat chatSMS = {props.chatSMS} addMessage = {props.addMessage} />\r\n        </div>\r\n    );\r\n}\r\nexport default Messages\r\n\r\n","import { connect } from 'react-redux';\r\nimport { addMessageActionCreator } from '../../../redux/messages-reducer';\r\nimport Messages from './Messages';\r\nimport './Messages.css'\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        usersList: state.messagesData.usersList,\r\n        chatSMS: state.messagesData.chatSMS\r\n    }  \r\n}\r\n\r\nconst MessagesContainer = connect(mapStateToProps, {addMessage: addMessageActionCreator}) (Messages)\r\n\r\nexport default MessagesContainer"],"sourceRoot":""}