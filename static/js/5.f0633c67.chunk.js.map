{"version":3,"sources":["utils/validator/validators.js","components/Common/FormsStyles/FormControls.jsx","HOC/WithAuthRedirect.js","components/Content/Messages/Chat/ChatForm/ChatForm.jsx","components/Content/Messages/Chat/ChatSMS/ChatSMS.jsx","components/Content/Messages/Chat/Chat.jsx","components/Content/Messages/Dialogs/DialogsList/DialogsItem/DialogsItem.jsx","components/Content/Messages/Dialogs/DialogsList/DialogsList.jsx","components/Content/Messages/Dialogs/Dialogs.jsx","components/Content/Messages/Messages.jsx","components/Content/Messages/MessagesContainer.jsx"],"names":["requeiredField","value","maxLengthCreator","maxLength","length","Textarea","input","meta","props","hasError","touched","error","className","Input","mapStateToPropsForRedirect","state","isAuth","auth","WithAuthRedirect","Component","RedirectComponent","this","to","React","connect","maxLength50","ChatReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","component","name","validate","ChatSMS","src","ava","alt","users","text","Chat","chatItems","chatSMS","map","elem","id","FormData","newMessage","addMessage","DialogsItem","user","idU","DialogsList","dialogItems","Dialogs","Messages","usersList","compose","messagesData","addMessageActionCreator"],"mappings":"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","file":"static/js/5.f0633c67.chunk.js","sourcesContent":["\r\n\r\nexport const requeiredField = value => {\r\n    if (value) {\r\n        return undefined\r\n    }\r\n    return 'Field is required'\r\n}\r\n\r\n\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    \r\n    if (value) {\r\n        if (value.length > maxLength) {\r\n            return `Max length is ${maxLength}`\r\n        }\r\n        return undefined\r\n    } else {\r\n        \r\n    }\r\n\r\n    \r\n}","import './FormControls.css'\r\n\r\nexport const Textarea = ({input, meta, ...props}) => {\r\n    const hasError = meta.touched && meta.error\r\n    return (\r\n        <div className = { hasError ? 'form-control error' : 'form-control'}>\r\n            <textarea {...input} {...props} />\r\n            { hasError && <span className = {'error-messege'} >{meta.error}</span>}  \r\n        </div>\r\n    )\r\n}\r\nexport const Input = ({input, meta, ...props}) => {\r\n    const hasError = meta.touched && meta.error\r\n    return (\r\n        <div className = { hasError ? 'form-control error' : 'form-control'}>\r\n            <input {...input} {...props} />\r\n            { hasError && <span className = {'error-messege'} >{meta.error}</span>}  \r\n        </div>\r\n    )\r\n}","import React from \"react\"\r\nimport { connect } from \"react-redux\"\r\nimport { Redirect } from \"react-router\"\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport const WithAuthRedirect = (Component) => {\r\n    \r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) {\r\n                return <Redirect to='/Content/Login' />\r\n            }\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect) (RedirectComponent)\r\n\r\n    return ConnectedAuthRedirectComponent\r\n}\r\n","import { Field, reduxForm } from \"redux-form\"\r\nimport { maxLengthCreator, requeiredField } from \"../../../../../utils/validator/validators\"\r\nimport { Textarea } from \"../../../../Common/FormsStyles/FormControls\"\r\n\r\nconst maxLength50 = maxLengthCreator(50)\r\n\r\nconst ChatForm = (props) => {\r\n    return (\r\n        <form onSubmit = {props.handleSubmit} >\r\n            <Field className=\"input-message\" component = {Textarea} name = {'newMessage'} validate = {[requeiredField, maxLength50]}  />\r\n            <button className=\"btn-send message__btn\">Send</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport const ChatReduxForm = reduxForm({form: 'chat'}) (ChatForm)\r\n","import './ChatSMS.css'\r\nimport ava from '../../../../../Rlogo.png'\r\n\r\nconst ChatSMS = (props) => {\r\n    return (\r\n        <li className = \"chat-message\">\r\n            <img src = {ava} alt = {ava} className = \"avatar logo chat-message__avatar\"/>\r\n            <h3 className = \"chat-message__login\">{props.users}</h3>\r\n            <p className = \"chat-message__text\">{props.text}</p>\r\n        </li>\r\n    );\r\n}\r\n\r\nexport default ChatSMS","import React from 'react';\r\nimport './Chat.css'\r\nimport { ChatReduxForm } from './ChatForm/ChatForm';\r\nimport ChatSMS from './ChatSMS/ChatSMS';\r\n\r\nconst Chat = (props) => {\r\n\r\n    const addMessage = (FormData) => {\r\n        if (FormData.newMessage) {\r\n            props.addMessage(FormData.newMessage)\r\n        }       \r\n    }\r\n\r\n    const chatItems = props.chatSMS.map(elem => {\r\n        return <ChatSMS users = {'Ruslan'}  text = {elem.text} key = {elem.id}/>    \r\n    })\r\n    return (\r\n        <div className = \"chat messages__chat\">\r\n            {chatItems}\r\n            <div className = \"chat__create-message\">\r\n                <ChatReduxForm onSubmit = {addMessage} />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default Chat","import './DialogsItem.css'\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst DialogsItem = (props) => {\r\n    const users = props.user\r\n    const id = props.idU\r\n    return (\r\n        <NavLink to = {\"/Content/Messages/\" + id} className = \"dialogs-list__item\">{users}</NavLink>\r\n    );\r\n}\r\nexport default DialogsItem","import DialogsItem from './DialogsItem/DialogsItem';\r\nimport './DialogsList.css'\r\n\r\nconst DialogsList = (props) => {\r\n    const user = props.users\r\n    const dialogItems = user.map(elem => {\r\n        return <DialogsItem user = {elem.name} idU = {elem.id} key = {elem.id}/>\r\n    })\r\n    return (\r\n        <ul className=\"dialogs-list\">\r\n            {dialogItems}\r\n        </ul>\r\n    );\r\n}\r\nexport default DialogsList","import './Dialogs.css'\r\nimport DialogsList from './DialogsList/DialogsList';\r\n\r\nconst Dialogs = (props) => {  \r\n    return (\r\n        <div className=\"dialogs messages__dialogs\">\r\n            <h2 className = \"dialogs-title\">Dialogs</h2>\r\n            <DialogsList users = {props.users}/>\r\n        </div>\r\n    );\r\n}\r\nexport default Dialogs","import Chat from './Chat/Chat';\r\nimport Dialogs from './Dialogs/Dialogs';\r\nimport './Messages.css'\r\n\r\nconst Messages = (props) => {\r\n    \r\n    return (\r\n        <div className = \"messages content__messages\">\r\n            <Dialogs users = {props.usersList}/>\r\n            <Chat chatSMS = {props.chatSMS} addMessage = {props.addMessage} />\r\n        </div>\r\n    );\r\n}\r\nexport default Messages\r\n\r\n","import { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport { WithAuthRedirect } from '../../../HOC/WithAuthRedirect';\r\nimport { addMessageActionCreator } from '../../../redux/messages-reducer';\r\nimport Messages from './Messages';\r\nimport './Messages.css'\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        usersList: state.messagesData.usersList,\r\n        chatSMS: state.messagesData.chatSMS\r\n    }  \r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {addMessage: addMessageActionCreator}),\r\n    WithAuthRedirect\r\n) (Messages)\r\n\r\n"],"sourceRoot":""}