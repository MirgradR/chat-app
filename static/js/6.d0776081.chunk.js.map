{"version":3,"sources":["utils/validator/validators.js","components/Common/FormsStyles/FormControls.jsx","components/Content/Login/LoginForm/LoginForm.jsx","components/Content/Login/Login.jsx","components/Content/Login/LoginContainer.jsx"],"names":["requeiredField","value","maxLengthCreator","maxLength","length","Textarea","input","meta","props","hasError","touched","error","className","Input","maxLength25","LoginReduxForm","reduxForm","form","handleSubmit","onSubmit","Field","placeholder","component","name","validate","type","Login","LoginContainer","formData","login","password","rememberMe","this","isAuth","to","React","Component","FriendsContainer","connect","state","auth","logout"],"mappings":"kIAEA,oEAAO,IAAMA,EAAiB,SAAAC,GAC1B,IAAIA,EAGJ,MAAO,qBAKEC,EAAmB,SAACC,GAAD,OAAe,SAACF,GAC5C,GAAIA,EAAMG,OAASD,EACf,MAAM,iBAAN,OAAwBA,M,+KCXnBE,EAAW,SAAC,GAA6B,IAA5BC,EAA2B,EAA3BA,MAAOC,EAAoB,EAApBA,KAASC,EAAW,iBAC3CC,EAAWF,EAAKG,SAAWH,EAAKI,MACtC,OACI,sBAAKC,UAAcH,EAAW,qBAAuB,eAArD,UACI,oDAAcH,GAAWE,IACvBC,GAAY,sBAAMG,UAAa,gBAAnB,SAAsCL,EAAKI,YAIxDE,EAAQ,SAAC,GAA6B,IAA5BP,EAA2B,EAA3BA,MAAOC,EAAoB,EAApBA,KAASC,EAAW,iBACxCC,EAAWF,EAAKG,SAAWH,EAAKI,MACtC,OACI,sBAAKC,UAAcH,EAAW,qBAAuB,eAArD,UACI,iDAAWH,GAAWE,IACpBC,GAAY,sBAAMG,UAAa,gBAAnB,SAAsCL,EAAKI,a,oMCV/DG,EAAcZ,YAAiB,IAiBxBa,EAAiBC,YAAU,CAACC,KAAM,SAAjBD,EAfL,SAAC,GAA2B,IAA1BE,EAAyB,EAAzBA,aAAcP,EAAW,EAAXA,MAErC,OACI,uBAAMQ,SAAYD,EAAcN,UAAY,aAA5C,UACI,cAACQ,EAAA,EAAD,CAAOR,UAAY,oBAAoBS,YAAa,QAASC,UAAaT,IAAOU,KAAQ,QAASC,SAAY,CAACxB,IAAgBc,KAC/H,cAACM,EAAA,EAAD,CAAOR,UAAY,uBAAuBS,YAAa,WAAYC,UAAaT,IAAOU,KAAQ,WAAYE,KAAQ,WAAYD,SAAY,CAACxB,IAAgBc,KAC5J,sBAAKF,UAAY,kBAAjB,UACI,cAACQ,EAAA,EAAD,CAAOR,UAAY,kCAAkCa,KAAM,WAAYH,UAAaT,IAAOU,KAAQ,eACnG,mBAAGX,UAAY,+BAAf,4BAEFD,GAAS,qBAAKC,UAAW,mBAAhB,SAAoC,4BAAID,MACnD,wBAAQC,UAAY,YAApB,yBCPGc,EAVD,SAAClB,GAEX,OACI,gCACI,uCACA,cAACO,EAAD,CAAgBI,SAAUX,EAAMW,eCDtCQ,E,4MAEFR,SAAW,SAACS,GACR,EAAKpB,MAAMqB,MAAMD,EAASC,MAAOD,EAASE,SAAUF,EAASG,a,4CAEjE,WACI,OAAIC,KAAKxB,MAAMyB,OACJ,cAAC,IAAD,CAAUC,GAAM,qBAGvB,cAAC,EAAD,CAAOf,SAAYa,KAAKb,SAAUX,MAASwB,KAAKxB,Y,GAV/B2B,IAAMC,WAqB7BC,EAAmBC,aAND,SAACC,GACrB,MAAO,CACHN,OAAQM,EAAMC,KAAKP,UAIuB,CAACJ,MAAOA,IAAOY,OAAQA,KAAhDH,CAA2DX,GACrEU","file":"static/js/6.d0776081.chunk.js","sourcesContent":["\r\n\r\nexport const requeiredField = value => {\r\n    if (value) {\r\n        return undefined\r\n    }\r\n    return 'Field is required'\r\n}\r\n\r\n\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value.length > maxLength) {\r\n        return `Max length is ${maxLength}` \r\n    }\r\n    return undefined\r\n}","import './FormControls.css'\r\n\r\nexport const Textarea = ({input, meta, ...props}) => {\r\n    const hasError = meta.touched && meta.error\r\n    return (\r\n        <div className = { hasError ? 'form-control error' : 'form-control'}>\r\n            <textarea {...input} {...props} />\r\n            { hasError && <span className = {'error-messege'} >{meta.error}</span>}  \r\n        </div>\r\n    )\r\n}\r\nexport const Input = ({input, meta, ...props}) => {\r\n    const hasError = meta.touched && meta.error\r\n    return (\r\n        <div className = { hasError ? 'form-control error' : 'form-control'}>\r\n            <input {...input} {...props} />\r\n            { hasError && <span className = {'error-messege'} >{meta.error}</span>}  \r\n        </div>\r\n    )\r\n}","import { Field, reduxForm } from 'redux-form'\r\nimport { maxLengthCreator, requeiredField } from '../../../../utils/validator/validators'\r\nimport { Input } from '../../../Common/FormsStyles/FormControls'\r\nimport './LoginForm.css'\r\nimport '../../../Common/FormsStyles/FormControls.css'\r\n\r\nconst maxLength25 = maxLengthCreator(25)\r\n\r\nexport const LoginForm = ({handleSubmit, error}) => {\r\n    \r\n    return (\r\n        <form onSubmit = {handleSubmit} className = 'login-form'>\r\n            <Field className = 'login-form__login' placeholder={'Login'} component = {Input} name = {'login'} validate = {[requeiredField, maxLength25]} />\r\n            <Field className = 'login-form__password' placeholder={'Password'} component = {Input} name = {'password'} type = {'password'} validate = {[requeiredField, maxLength25]} />\r\n            <div className = 'form-rememberMe'>\r\n                <Field className = 'login-form__rememberMe-checkbox' type={'checkbox'} component = {Input} name = {'rememberMe'} /> \r\n                <p className = 'login-form__rememberMe-title'>Remember me</p>\r\n            </div>\r\n            { error && <div className={'form-login-error'}><p>{error}</p></div> }\r\n            <button className = 'btn-login'>Login</button>\r\n        </form>\r\n    )\r\n}\r\nexport const LoginReduxForm = reduxForm({form: 'login'}) (LoginForm)","import { LoginReduxForm } from \"./LoginForm/LoginForm\"\r\n\r\nconst Login = (props) => {\r\n\r\n    return (\r\n        <div>\r\n            <h3>Login</h3>\r\n            <LoginReduxForm onSubmit={props.onSubmit} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login","import React from \"react\"\r\nimport { connect } from \"react-redux\"\r\nimport { Redirect } from \"react-router\"\r\nimport { login, logout } from \"../../../redux/auth-reducer\"\r\nimport Login from \"./Login\"\r\n\r\nclass LoginContainer extends React.Component {\r\n\r\n    onSubmit = (formData) => {\r\n        this.props.login(formData.login, formData.password, formData.rememberMe)\r\n    }\r\n    render() {\r\n        if (this.props.isAuth) {\r\n            return <Redirect to = {'/content/profile'} />\r\n        }\r\n        return (\r\n            <Login onSubmit = {this.onSubmit} props = {this.props} />\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nconst FriendsContainer = connect(mapStateToProps, {login: login, logout: logout} ) (LoginContainer)\r\nexport default FriendsContainer"],"sourceRoot":""}