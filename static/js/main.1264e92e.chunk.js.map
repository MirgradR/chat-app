{"version":3,"sources":["components/Content/Profile/Profile.module.css","reportWebVitals.js","preloader.gif","components/Common/Preloader/Preloader.js","api/api.js","redux/friends-reducer.js","Rlogo.png","components/Content/Friends/FriendsItem/FriendsItem.jsx","components/Content/Friends/Pagination/Pagination.jsx","components/Content/Friends/Friends.jsx","HOC/WithAuthRedirect.js","redux/friends-selectors.js","components/Content/Friends/FriendsContainer.jsx","redux/auth-reducer.js","utils/validator/validators.js","components/Common/FormsStyles/FormControls.jsx","components/Content/Login/LoginForm/LoginForm.jsx","components/Content/Login/Login.jsx","components/Content/Login/LoginContainer.jsx","redux/messages-reducer.js","components/Content/Messages/Chat/ChatForm/ChatForm.jsx","components/Content/Messages/Chat/ChatSMS/ChatSMS.jsx","components/Content/Messages/Chat/Chat.jsx","components/Content/Messages/Dialogs/DialogsList/DialogsItem/DialogsItem.jsx","components/Content/Messages/Dialogs/DialogsList/DialogsList.jsx","components/Content/Messages/Dialogs/Dialogs.jsx","components/Content/Messages/Messages.jsx","components/Content/Messages/MessagesContainer.jsx","components/Content/Profile/Post/PostList/PostItem/PostItem.jsx","components/Content/Profile/Post/PostList/PostList.jsx","components/Content/Profile/Post/PostCreateForm/PostForm/PostForm.jsx","components/Content/Profile/Post/PostCreateForm/PostCreate.jsx","components/Content/Profile/Post/Post.jsx","components/Content/Profile/ProfileInfo/ProfileStatus/ProfileStatusHOOKS.jsx","components/Content/Profile/ProfileInfo/ProfileInfo.jsx","components/Content/Profile/Profile.jsx","redux/profile-reducer.js","components/Content/Profile/ProfileContainer.jsx","components/Content/Content.jsx","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","components/Navigation/MenuItem/MenuItem.jsx","components/Navigation/Navigation.jsx","components/Navigation/NavigationContainer.jsx","redux/app-initial-reducer.js","redux/navigation-reducer.js","redux/redux-store.js","App.js","index.js"],"names":["module","exports","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Preloader","props","src","preloader","className","instance","axios","create","withCredentials","baseURL","headers","friendsAPI","followUser","userID","post","data","unFollowUser","delete","getUsers","currentPage","pageSize","get","authAPI","email","password","rememberMe","profileAPI","status","put","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","TOGGLE_IS_FETCHING","FOLLOWING_PROGRESS","initialState","users","totalUsersCount","isFetching","followingProgress","updateObjectInArray","items","itemID","objPropName","newObjProps","map","u","followAC","id","type","unfollowAC","toggleIsFetchingCountAC","toggleFollowingProgressAC","followUnfollow","dispatch","actionCreator","apiMethon","a","resultCode","FriendsItem","to","photos","small","avatar","alt","name","followed","disabled","some","onClick","unfollowUser","Pagination","pagesCount","Math","ceil","pages","push","i","p","setCurrentPage","Friends","s","setUsers","mapStateToPropsForRedirect","state","isAuth","auth","WithAuthRedirect","Component","RedirectComponent","this","React","connect","createSelector","friendsData","filter","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingProgress","FriendsContainer","compose","bind","toggleFollowingProgress","totalCount","SET_USER_DATA","userId","login","setUserDataAC","setUserData","userInfo","logout","requeiredField","value","maxLengthCreator","maxLength","length","Textarea","input","meta","hasError","touched","error","Input","maxLength25","LoginReduxForm","reduxForm","form","handleSubmit","onSubmit","Field","placeholder","component","validate","Login","LoginContainer","formData","messageError","messages","stopSubmit","_error","ADD_MESSAGE","usersList","chatSMS","text","maxLength50","ChatReduxForm","ChatSMS","ava","Chat","chatItems","elem","FormData","newMessage","addMessage","DialogsItem","user","idU","DialogsList","dialogItems","Dialogs","Messages","MessagesContainer","messagesData","PostItem","logo","likes","PostList","postItems","posts","maxLength10","PostReduxForm","CreatePost","newPost","addPost","Post","ProfileStatusHooks","useState","editMode","setEditMode","setStatus","useEffect","onBlur","updateStatus","onChange","e","currentTarget","autoFocus","ProfileInfo","item","profile","profileInfo","contactsArr","key","contacts","c","floor","random","fullName","aboutMe","lookingForAJob","Profile","Pro","ADD_POST","SET_PROFILE_INFO","GET_STATUS","postUsers","getProfileStatusAC","ProfileContainer","setProfileInfo","match","params","getProfileStatus","updateProfileStatus","profileData","myProfile","showUserByID","withRouter","Content","path","render","Header","HeaderContainer","MenuItem","link","Navigation","menuList","navigation","NavigationContainer","SET_INITIALIZED","initialized","reducers","combineReducers","action","formReducer","app","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleware","App","initialize","AppContainer","AppMain","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.1264e92e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__2D5ez\"};","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export default __webpack_public_path__ + \"static/media/preloader.bf7cf191.gif\";","import preloader from './../../../preloader.gif'\r\n\r\nconst Preloader = (props) => {\r\n    return <img src = {preloader} className = 'preloader' />\r\n}\r\nexport default Preloader","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        'API-KEY': 'e936cc93-ffd1-4fe3-841e-539754d0802a'\r\n    }\r\n})\r\n\r\n\r\nexport const friendsAPI = {\r\n    followUser(userID) {\r\n        return instance.post(`follow/${userID}`, null).then(data => data.data)\r\n    },\r\n    unFollowUser(userID) {\r\n        return instance.delete(`follow/${userID}`).then(data => data.data)\r\n    },\r\n    getUsers(currentPage, pageSize) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`).then(data => data.data)\r\n    }\r\n}\r\n\r\nexport const authAPI = {\r\n    loginAuth (email, password, rememberMe = false ) {\r\n        return instance.post(`auth/login`, { email, password, rememberMe }).then(data => data.data)\r\n    },\r\n    logoutAuth () {\r\n        return instance.delete(`auth/login`).then(data => data.data)\r\n    },\r\n    getProfileAuth () {\r\n        return instance.get(`auth/me`).then(data => data.data)\r\n    }\r\n}\r\n\r\n\r\nexport const profileAPI = {\r\n    getProfileInfo(userID) {\r\n        return instance.get(`profile/` + userID).then(data => data.data)\r\n    },\r\n    getStatus(userID) {\r\n        return instance.get(`profile/status/` + userID).then(data => data.data)\r\n    },\r\n    updateStatus(status) {\r\n        return instance.put(`profile/status`, {status: status}).then(data => data)\r\n    }\r\n}\r\n","import { friendsAPI} from \"../api/api\"\r\n\r\nconst FOLLOW = 'FRIENDS/FOLLOW'\r\nconst UNFOLLOW = 'FRIENDS/UNFOLLOW'\r\nconst SET_USERS = 'FRIENDS/SET-USERS'\r\nconst SET_CURRENT_PAGE = 'FRIENDS/SET-CURRENT-PAGE'\r\nconst  SET_TOTAL_USERS_COUNT = 'FRIENDS/SET-TOTAL-USERS-COUNT' \r\nconst TOGGLE_IS_FETCHING = 'FRIENDS/TOGGLE-IS-FETCHING'\r\nconst FOLLOWING_PROGRESS = 'FRIENDS/FOLLOWING-PROGRESS'\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 10,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    followingProgress: []\r\n};\r\n\r\nconst updateObjectInArray = (items, itemID, objPropName, newObjProps) => {\r\n    return items.map(u => {\r\n        if (u[objPropName] === itemID) {\r\n            return {...u, ...newObjProps}\r\n        }\r\n        return u\r\n    })\r\n}\r\n\r\nexport const friendsReducer = (state = initialState, action) => {\r\n    \r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state, \r\n                users: updateObjectInArray(state.users, action.id, 'id', {followed: true})\r\n            }\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state, \r\n                users: updateObjectInArray(state.users, action.id, 'id', {followed: false})\r\n            }\r\n        case SET_USERS:\r\n            return {...state, users:  [...action.users]}\r\n        case SET_CURRENT_PAGE:\r\n            return {...state, currentPage: action.currentPage} \r\n        case SET_TOTAL_USERS_COUNT:\r\n            return { ...state, totalUsersCount: action.totalCount }\r\n        case TOGGLE_IS_FETCHING:\r\n            return { ...state, isFetching: action.isFetching }\r\n        case FOLLOWING_PROGRESS: \r\n            return {...state, \r\n                followingProgress: action.followingProgress\r\n                    ? [...state.followingProgress, action.userID]\r\n                    : state.followingProgress.filter(id => id !== action.userID)\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const followAC = (id) => {\r\n    return {\r\n        type: FOLLOW,\r\n        id: id\r\n    }\r\n}\r\nexport const unfollowAC = (id) => {\r\n    return {\r\n        type: UNFOLLOW,\r\n        id: id\r\n    }\r\n}\r\nexport const setUsersAC = (users) => {\r\n    return {\r\n        type: SET_USERS,\r\n        users: users\r\n    }\r\n}\r\nexport const setCurrentPageAC = (currentPage) => {\r\n    return {\r\n        type: SET_CURRENT_PAGE,\r\n        currentPage: currentPage\r\n    }\r\n}\r\nexport const setTotalUsersCountAC = (totalCount) => {\r\n    return {\r\n        type: SET_TOTAL_USERS_COUNT,\r\n        totalCount: totalCount\r\n    }\r\n}\r\nexport const toggleIsFetchingCountAC = (isFetching) => {\r\n    return {\r\n        type: TOGGLE_IS_FETCHING,\r\n        isFetching: isFetching\r\n    }\r\n}\r\nexport const toggleFollowingProgressAC = (followingProgress, userID) => {\r\n    return {\r\n        type: FOLLOWING_PROGRESS,\r\n        followingProgress: followingProgress,\r\n        userID: userID\r\n    }\r\n}\r\n\r\nexport const getUsersThunkCreator = (currentPage, pageSize) => {\r\n    return async (dispatch) => {\r\n        dispatch(toggleIsFetchingCountAC(true))\r\n        let data = await friendsAPI.getUsers(currentPage, pageSize)\r\n        dispatch(toggleIsFetchingCountAC(false))\r\n        dispatch(setUsersAC(data.items))\r\n        dispatch(setTotalUsersCountAC(data.totalCount))\r\n    }\r\n}\r\n\r\nconst followUnfollow = async (dispatch, userID, actionCreator, apiMethon) => {\r\n    dispatch(toggleFollowingProgressAC(true, userID))\r\n    let data = await apiMethon(userID)\r\n    if (data.resultCode === 0) {\r\n        dispatch(actionCreator(userID))\r\n    }\r\n    dispatch(toggleFollowingProgressAC(false, userID))\r\n}\r\n\r\nexport const followUserThunkCreator = (userID) => {\r\n    return async (dispatch) => {\r\n        followUnfollow(dispatch, userID, followAC, friendsAPI.followUser.bind(friendsAPI))\r\n    }\r\n}\r\n\r\nexport const unFollowUserThunkCreator = (userID) => {\r\n    return async (dispatch) => {\r\n        followUnfollow(dispatch, userID, unfollowAC, friendsAPI.unFollowUser.bind(friendsAPI))\r\n    }\r\n}\r\n\r\n\r\n\r\n","export default __webpack_public_path__ + \"static/media/Rlogo.fa290132.png\";","import './FriendsItem.css'\r\nimport avatar from './../../../../Rlogo.png'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nconst FriendsItem = (props) => {\r\n    \r\n    const followUser = () => {\r\n        props.followUser(props.users.id)\r\n    }\r\n\r\n    const unfollowUser = () => {\r\n        props.unfollowUser(props.users.id)\r\n    }\r\n\r\n    return (\r\n        <li className='friends__list-item'>\r\n            <NavLink to = {'/Content/Profile/' + props.users.id}>\r\n                <img src={props.users.photos.small ? props.users.photos.small : avatar} alt='avatar' className='logo avatar' />\r\n                <div className='list-item__description'>\r\n                    <h2 className='description-login'>{props.users.name}</h2>\r\n                    <div className = {'location'}></div>\r\n                    <p className='description-greeting'>{props.users.status}</p>\r\n                </div>\r\n            </NavLink>\r\n            {props.users.followed\r\n                    ? <button disabled = {props.followingProgress.some(id => id === props.users.id)} onClick={unfollowUser} className='list-item__following'>Unfollow</button>\r\n                    : <button disabled = {props.followingProgress.some(id => id === props.users.id)} onClick={followUser} className='list-item__following'>Follow</button>\r\n                }\r\n        </li>\r\n    )\r\n}\r\nexport default FriendsItem\r\n\r\n\r\n","\r\n\r\nexport const Pagination = (props) => {\r\n    let pagesCount = Math.ceil(props.totalUsersCount / props.pageSize)\r\n    let pages = []\r\n\r\n    if (props.currentPage > 1) {\r\n        pages.push(1)\r\n        if (props.currentPage > 2) {\r\n           pages.push(props.currentPage - 1) \r\n        } \r\n    }\r\n    for (let i = props.currentPage; i <= pagesCount; i++) {\r\n        if (i < 9) {\r\n            pages.push(i)  \r\n        }\r\n    }\r\n    if (props.currentPage >= 8) {\r\n        if (props.currentPage < pagesCount) {\r\n            if (props.currentPage !== 8) {\r\n                pages.push(props.currentPage)    \r\n            }\r\n            pages.push(props.currentPage + 1)\r\n        }   \r\n    }\r\n    if (props.currentPage !== pagesCount - 1) {\r\n        pages.push(pagesCount)\r\n    }\r\n    \r\n    return (\r\n        <div className='pagination-pages'>\r\n            {pages.map(p => {\r\n                return <button className={props.currentPage === p\r\n                    ? 'pagination-pages__value selected'\r\n                    : 'pagination-pages__value'}\r\n                    onClick={() => { props.setCurrentPage(p) }} >\r\n                    {p}\r\n                </button>\r\n            })}\r\n        </div>\r\n    )\r\n}","import FriendsItem from \"./FriendsItem/FriendsItem\"\r\nimport './Friends.css'\r\nimport { Pagination } from \"./Pagination/Pagination\"\r\n\r\nconst Friends = (props) => {\r\n    \r\n    return (\r\n        <div className = 'friends content__friends'>\r\n                <Pagination totalUsersCount = {props.totalUsersCount}\r\n                    pageSize = {props.pageSize}\r\n                    currentPage = {props.currentPage}\r\n                    setCurrentPage = {props.setCurrentPage}\r\n                />\r\n                <ul className='friends__list'>\r\n                    {props.users.map(s => {\r\n                        return <FriendsItem users={s}\r\n                            followUser={props.followUser}\r\n                            unfollowUser={props.unfollowUser}\r\n                            setUsers={props.setUsers}\r\n                            key={s.id}\r\n                            followingProgress = {props.followingProgress}  />\r\n                    })}\r\n                </ul>\r\n            </div> \r\n    )\r\n}\r\nexport default Friends","import React from \"react\"\r\nimport { connect } from \"react-redux\"\r\nimport { Redirect } from \"react-router\"\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport const WithAuthRedirect = (Component) => {\r\n    \r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) {\r\n                return <Redirect to='/Content/Login' />\r\n            }\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect) (RedirectComponent)\r\n\r\n    return ConnectedAuthRedirectComponent\r\n}\r\n","import { createSelector } from \"reselect\"\r\n\r\n\r\n\r\nexport const getUsersSelector = (state) => {\r\n    return state.friendsData.users\r\n}\r\n\r\n// export const getUsersSelector = (state) => {     не нужен, это пример использования\r\n//     return getUsers(state).filter(u => true)\r\n// }\r\n\r\nexport const getUsers = createSelector( getUsersSelector, (users)  => {\r\n    return users.filter(u => true)\r\n})\r\n\r\n\r\n\r\n\r\n\r\nexport const getPageSize = (state) => {\r\n    return state.friendsData.pageSize\r\n}\r\nexport const getTotalUsersCount = (state) => {\r\n    return state.friendsData.totalUsersCount\r\n}\r\nexport const getCurrentPage = (state) => {\r\n    return state.friendsData.currentPage\r\n}\r\nexport const getIsFetching = (state) => {\r\n    return state.friendsData.isFetching\r\n}\r\nexport const getFollowingProgress = (state) => {\r\n    return state.friendsData.followingProgress\r\n}\r\n\r\n","import { connect } from \"react-redux\";\r\nimport { followUserThunkCreator, getUsersThunkCreator, setCurrentPageAC, toggleFollowingProgressAC, unFollowUserThunkCreator } from \"../../../redux/friends-reducer\";\r\nimport React from 'react'\r\nimport Friends from './Friends'\r\nimport Preloader from \"../../Common/Preloader/Preloader\";\r\nimport { WithAuthRedirect } from \"../../../HOC/WithAuthRedirect\";\r\nimport { compose } from \"redux\";\r\nimport { getCurrentPage, getFollowingProgress, getIsFetching, getPageSize, getTotalUsersCount, getUsers } from \"../../../redux/friends-selectors\";\r\n\r\nclass FriendsContainer extends React.Component {\r\n    \r\n    componentDidMount() { \r\n        this.props.getUsers(this.props.currentPage, this.props.pageSize)\r\n    }\r\n\r\n    setCurrentPage = (p) => {\r\n        this.props.setCurrentPage(p)\r\n        this.props.getUsers(p, this.props.pageSize)\r\n    }\r\n    \r\n    render() {\r\n        return   (\r\n            <div>\r\n                {this.props.isFetching ? <Preloader/> : <Friends\r\n                    totalUsersCount={this.props.totalUsersCount}\r\n                    pageSize={this.props.pageSize}\r\n                    currentPage={this.props.currentPage}\r\n                    setCurrentPage={this.setCurrentPage}\r\n                    users={this.props.users}\r\n                    followUser={this.props.followUser}\r\n                    unfollowUser={this.props.unfollowUser}\r\n                    setUsers={this.props.setUsers}\r\n                    followingProgress = {this.props.followingProgress} />}\r\n            </div>   \r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingProgress: getFollowingProgress(state)\r\n    }\r\n}\r\n\r\nexport default compose (\r\n    connect(mapStateToProps, {\r\n        followUser: followUserThunkCreator,\r\n        unfollowUser: unFollowUserThunkCreator,\r\n        setCurrentPage: setCurrentPageAC,\r\n        toggleFollowingProgress: toggleFollowingProgressAC,\r\n        getUsers: getUsersThunkCreator\r\n        }),\r\n    WithAuthRedirect\r\n) (FriendsContainer)\r\n\r\n","import { stopSubmit } from \"redux-form\"\r\nimport { authAPI } from \"../api/api\"\r\n\r\nconst SET_USER_DATA = 'AUTH/SET-USER-DATA'\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false\r\n}\r\n\r\nexport const authReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state, \r\n                ...action.data\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const setUserDataAC = (userId, email, login, isAuth) => {\r\n    return {\r\n        type: SET_USER_DATA,\r\n        data: {userId, email, login, isAuth}\r\n    }\r\n}\r\n\r\nexport const setUserData = () => {\r\n    return async (dispatch) => {\r\n        let data = await authAPI.getProfileAuth()\r\n        const userInfo = data.data\r\n        if (data.resultCode === 0) {\r\n            dispatch(setUserDataAC(userInfo.id, userInfo.email, userInfo.login, true))\r\n        }\r\n    }\r\n}\r\nexport const login = (email, password, rememberMe) => {\r\n    return async (dispatch) => {\r\n        let data = await authAPI.loginAuth(email, password, rememberMe)\r\n        if (data.resultCode === 0) {\r\n            dispatch(setUserData())\r\n        }\r\n        else {\r\n            let messageError = data.data.messages.length > 0 ? data.data.messages[0] : 'The Login or Password is incorrect'\r\n            dispatch(stopSubmit('login', { _error: messageError }))\r\n        }\r\n    }\r\n}\r\nexport const logout = () => {\r\n    return async (dispatch) => {\r\n        let data = await authAPI.logoutAuth()\r\n        if (data.resultCode === 0) {\r\n            dispatch(setUserDataAC(null, null, null, false))\r\n        }\r\n    }\r\n}\r\n\r\n","\r\n\r\nexport const requeiredField = value => {\r\n    if (value) {\r\n        return undefined\r\n    }\r\n    return 'Field is required'\r\n}\r\n\r\n\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value.length > maxLength) {\r\n        return `Max length is ${maxLength}` \r\n    }\r\n    return undefined\r\n}","import './FormControls.css'\r\n\r\nexport const Textarea = ({input, meta, ...props}) => {\r\n    const hasError = meta.touched && meta.error\r\n    return (\r\n        <div className = { hasError ? 'form-control error' : 'form-control'}>\r\n            <textarea {...input} {...props} />\r\n            { hasError && <span className = {'error-messege'} >{meta.error}</span>}  \r\n        </div>\r\n    )\r\n}\r\nexport const Input = ({input, meta, ...props}) => {\r\n    const hasError = meta.touched && meta.error\r\n    return (\r\n        <div className = { hasError ? 'form-control error' : 'form-control'}>\r\n            <input {...input} {...props} />\r\n            { hasError && <span className = {'error-messege'} >{meta.error}</span>}  \r\n        </div>\r\n    )\r\n}","import { Field, reduxForm } from 'redux-form'\r\nimport { maxLengthCreator, requeiredField } from '../../../../utils/validator/validators'\r\nimport { Input } from '../../../Common/FormsStyles/FormControls'\r\nimport './LoginForm.css'\r\nimport '../../../Common/FormsStyles/FormControls.css'\r\n\r\nconst maxLength25 = maxLengthCreator(25)\r\n\r\nexport const LoginForm = ({handleSubmit, error}) => {\r\n    \r\n    return (\r\n        <form onSubmit = {handleSubmit} className = 'login-form'>\r\n            <Field className = 'login-form__login' placeholder={'Login'} component = {Input} name = {'login'} validate = {[requeiredField, maxLength25]} />\r\n            <Field className = 'login-form__password' placeholder={'Password'} component = {Input} name = {'password'} type = {'password'} validate = {[requeiredField, maxLength25]} />\r\n            <div className = 'form-rememberMe'>\r\n                <Field className = 'login-form__rememberMe-checkbox' type={'checkbox'} component = {Input} name = {'rememberMe'} /> \r\n                <p className = 'login-form__rememberMe-title'>Remember me</p>\r\n            </div>\r\n            { error && <div className={'form-login-error'}><p>{error}</p></div> }\r\n            <button className = 'btn-login'>Login</button>\r\n        </form>\r\n    )\r\n}\r\nexport const LoginReduxForm = reduxForm({form: 'login'}) (LoginForm)","import { LoginReduxForm } from \"./LoginForm/LoginForm\"\r\n\r\nconst Login = (props) => {\r\n\r\n    return (\r\n        <div>\r\n            <h3>Login</h3>\r\n            <LoginReduxForm onSubmit={props.onSubmit} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login","import React from \"react\"\r\nimport { connect } from \"react-redux\"\r\nimport { Redirect } from \"react-router\"\r\nimport { login, logout } from \"../../../redux/auth-reducer\"\r\nimport Login from \"./Login\"\r\n\r\nclass LoginContainer extends React.Component {\r\n\r\n    onSubmit = (formData) => {\r\n        this.props.login(formData.login, formData.password, formData.rememberMe)\r\n    }\r\n    render() {\r\n        if (this.props.isAuth) {\r\n            return <Redirect to = {'/content/profile'} />\r\n        }\r\n        return (\r\n            <Login onSubmit = {this.onSubmit} props = {this.props} />\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nconst FriendsContainer = connect(mapStateToProps, {login: login, logout: logout} ) (LoginContainer)\r\nexport default FriendsContainer","const ADD_MESSAGE = 'MESSAGES/ADD-MESSAGE'\r\n\r\nlet initialState = {\r\n    usersList: [\r\n        { name: 'Alex', id: 1 },\r\n        { name: 'Jenya', id: 2 },\r\n        { name: 'Jorik', id: 3 },\r\n        { name: 'Roma', id: 4 },\r\n        { name: 'Nikita', id: 5 },\r\n        { name: 'Masha', id: 6 },\r\n        { name: 'Kate', id: 7 }\r\n    ],\r\n    chatSMS: [\r\n        { text: 'Hi', id: 1 },\r\n        { text: 'Good', id: 2 },\r\n        { text: 'How are you', id: 3 },\r\n        { text: 'Haha', id: 4 },   \r\n    ],\r\n}\r\n\r\nexport const messagesReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case ADD_MESSAGE: \r\n            let newMessage = action.newMessage\r\n            return {\r\n                ...state,\r\n                chatSMS: [...state.chatSMS, {text: newMessage, id: 6}]\r\n            }\r\n        default: \r\n            return state\r\n    }\r\n}\r\n\r\nexport const addMessageActionCreator = (newMessage) => {\r\n    return {\r\n        type: ADD_MESSAGE,\r\n        newMessage: newMessage\r\n    }\r\n}\r\n","import { Field, reduxForm } from \"redux-form\"\r\nimport { maxLengthCreator, requeiredField } from \"../../../../../utils/validator/validators\"\r\nimport { Textarea } from \"../../../../Common/FormsStyles/FormControls\"\r\n\r\nconst maxLength50 = maxLengthCreator(50)\r\n\r\nconst ChatForm = (props) => {\r\n    return (\r\n        <form onSubmit = {props.handleSubmit} >\r\n            <Field className=\"input-message\" component = {Textarea} name = {'newMessage'} validate = {[requeiredField, maxLength50]}  />\r\n            <button className=\"btn-send message__btn\">Send</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport const ChatReduxForm = reduxForm({form: 'chat'}) (ChatForm)\r\n","import './ChatSMS.css'\r\nimport ava from '../../../../../Rlogo.png'\r\n\r\nconst ChatSMS = (props) => {\r\n    return (\r\n        <li className = \"chat-message\">\r\n            <img src = {ava} alt = {ava} className = \"avatar logo chat-message__avatar\"/>\r\n            <h3 className = \"chat-message__login\">{props.users}</h3>\r\n            <p className = \"chat-message__text\">{props.text}</p>\r\n        </li>\r\n    );\r\n}\r\n\r\nexport default ChatSMS","import React from 'react';\r\nimport './Chat.css'\r\nimport { ChatReduxForm } from './ChatForm/ChatForm';\r\nimport ChatSMS from './ChatSMS/ChatSMS';\r\n\r\nconst Chat = (props) => {\r\n\r\n    const addMessage = (FormData) => {\r\n        if (FormData.newMessage) {\r\n            props.addMessage(FormData.newMessage)\r\n        }       \r\n    }\r\n\r\n    const chatItems = props.chatSMS.map(elem => {\r\n        return <ChatSMS users = {'Ruslan'}  text = {elem.text} key = {elem.id}/>    \r\n    })\r\n    return (\r\n        <div className = \"chat messages__chat\">\r\n            {chatItems}\r\n            <div className = \"chat__create-message\">\r\n                <ChatReduxForm onSubmit = {addMessage} />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default Chat","import './DialogsItem.css'\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst DialogsItem = (props) => {\r\n    const users = props.user\r\n    const id = props.idU\r\n    return (\r\n        <NavLink to = {\"/Content/Messages/\" + id} className = \"dialogs-list__item\">{users}</NavLink>\r\n    );\r\n}\r\nexport default DialogsItem","import DialogsItem from './DialogsItem/DialogsItem';\r\nimport './DialogsList.css'\r\n\r\nconst DialogsList = (props) => {\r\n    const user = props.users\r\n    const dialogItems = user.map(elem => {\r\n        return <DialogsItem user = {elem.name} idU = {elem.id} key = {elem.id}/>\r\n    })\r\n    return (\r\n        <ul className=\"dialogs-list\">\r\n            {dialogItems}\r\n        </ul>\r\n    );\r\n}\r\nexport default DialogsList","import './Dialogs.css'\r\nimport DialogsList from './DialogsList/DialogsList';\r\n\r\nconst Dialogs = (props) => {  \r\n    return (\r\n        <div className=\"dialogs messages__dialogs\">\r\n            <h2 className = \"dialogs-title\">Dialogs</h2>\r\n            <DialogsList users = {props.users}/>\r\n        </div>\r\n    );\r\n}\r\nexport default Dialogs","import Chat from './Chat/Chat';\r\nimport Dialogs from './Dialogs/Dialogs';\r\nimport './Messages.css'\r\n\r\nconst Messages = (props) => {\r\n    \r\n    return (\r\n        <div className = \"messages content__messages\">\r\n            <Dialogs users = {props.usersList}/>\r\n            <Chat chatSMS = {props.chatSMS} addMessage = {props.addMessage} />\r\n        </div>\r\n    );\r\n}\r\nexport default Messages\r\n\r\n","import { connect } from 'react-redux';\r\nimport { addMessageActionCreator } from '../../../redux/messages-reducer';\r\nimport Messages from './Messages';\r\nimport './Messages.css'\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        usersList: state.messagesData.usersList,\r\n        chatSMS: state.messagesData.chatSMS\r\n    }  \r\n}\r\n\r\nconst MessagesContainer = connect(mapStateToProps, {addMessage: addMessageActionCreator}) (Messages)\r\n\r\nexport default MessagesContainer","import logo from '../../../../../../Rlogo.png'\r\nimport './PostItem.css'\r\n\r\nconst PostItem = (props) => {\r\n    return (\r\n        <div className=\"item-post post-list__item-post\">\r\n            <img src={logo} alt=\"logo\" className=\"logo avatar item-post__avatar\" />\r\n            <h4 className=\"item-post__login\">{props.login}</h4>\r\n            <p className=\"item-post__text\">{props.text}</p>\r\n            <div className = \"item-post__action\">\r\n               <p className = \"item-post__likes-count\">{props.likes}</p>\r\n               <span className = \"like-img\">&#9829;</span> \r\n            </div>\r\n            \r\n        </div>\r\n    );\r\n}\r\nexport default PostItem","import PostItem from './PostItem/PostItem';\r\nimport './PostList.css'\r\n\r\nconst PostList = (props) => {\r\n    \r\n    const postUsers = props.posts\r\n    \r\n    const postItems = postUsers.map(elem => {\r\n        return <PostItem login={elem.name} text = {elem.post} likes = {elem.likes} key = {elem.id}/>\r\n    })\r\n    return (\r\n        <div className=\"post-list profile__post-list\">\r\n            {postItems}\r\n        </div>\r\n    );\r\n}\r\nexport default PostList","import { Field, reduxForm } from \"redux-form\"\r\nimport { maxLengthCreator, requeiredField } from \"../../../../../../utils/validator/validators\"\r\nimport { Textarea } from \"../../../../../Common/FormsStyles/FormControls\"\r\nimport './PostForm.css'\r\n\r\nconst maxLength10 = maxLengthCreator(10)\r\n\r\nconst PostForm = (props) => {\r\n  \r\n    return (\r\n        <form className=\"create-post\" onSubmit = {props.handleSubmit} >\r\n            <Field className=\"input-post\" component = {Textarea} name = {'newPost'} validate = {[requeiredField, maxLength10]} />\r\n            <button className=\"btn-send post__btn\" >Send</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport const PostReduxForm = reduxForm({form: 'post'}) (PostForm)\r\n","import './PostCreate.css'\r\nimport React from 'react'\r\nimport { PostReduxForm } from './PostForm/PostForm'\r\n\r\nconst CreatePost = (props) => {\r\n\r\n    const onSubmit = (formData) => {\r\n        if (formData.newPost) {\r\n            props.addPost(formData.newPost) \r\n        }   \r\n    }\r\n    \r\n    return (\r\n        <div className=\"create-post\">\r\n            <PostReduxForm onSubmit={onSubmit} />\r\n        </div>\r\n    );\r\n}\r\nexport default CreatePost","import './Post.css'\r\nimport PostList from './PostList/PostList';\r\nimport CreatePost from './PostCreateForm/PostCreate';\r\n\r\nconst Post = (props) => {\r\n    \r\n    return (\r\n        <div className=\"post profile__post\">\r\n            <h3 className=\"post__title\">My posts</h3>\r\n            <CreatePost addPost = {props.addPost} /> \r\n            <PostList posts = {props.posts}/>        \r\n        </div>\r\n    );\r\n}\r\nexport default Post","import React, { useEffect, useState } from \"react\"\r\nimport './ProfileStatus.css'\r\n\r\nconst ProfileStatusHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false)\r\n    let [status, setStatus] = useState(props.status)\r\n\r\n    useEffect( () => {\r\n        setStatus(props.status)\r\n    }, [props.status] )\r\n\r\n    const activateEditMode = () => { setEditMode(true) }\r\n    \r\n    const deActivateEditMode = () => { \r\n        setEditMode(false)\r\n        props.updateStatus(status) \r\n    }\r\n    const updateStatus = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <div className='personal-info__status'>\r\n            {editMode\r\n                ? <input onBlur = {deActivateEditMode} onChange = {updateStatus} value = {status} autoFocus={true} className='profile-status__create' />\r\n                : <h3 onClick = {activateEditMode} className='profile-status__title' >{props.status ? props.status : 'Status '}</h3>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatusHooks","import logo from '../../../../Rlogo.png'\r\nimport Preloader from '../../../Common/Preloader/Preloader'\r\nimport './ProfileInfo.css'\r\nimport ProfileStatusHooks from './ProfileStatus/ProfileStatusHOOKS'\r\n\r\nconst ProfileInfo = (props) => {\r\n    \r\n    const profile = props.profileInfo\r\n    \r\n    if (!profile) {\r\n        return <Preloader />\r\n    }\r\n\r\n    let item\r\n    let contactsArr = []\r\n    for (let key in profile.contacts) {\r\n        if (profile.contacts[key] !== null) {\r\n            item = key + ': ' + profile.contacts[key]\r\n            contactsArr.push(item)\r\n        }     \r\n    }\r\n    let contacts = contactsArr.map(c => {\r\n        return <h3 className=\"personal-info__item\" key={Math.floor(Math.random() * 1000)}>{c}</h3>\r\n    })\r\n    \r\n    return (\r\n        <div className='profile-info'>\r\n            <img src={profile.photos.small ? profile.photos.small : logo} alt=\"logo\" className=\"logo avatar profile__avatar\" />\r\n            <div className=\"personal-info profile__info\">\r\n                <h3 className=\"personal-info__item\" key = {Math.floor(Math.random()*1000)}>{profile.fullName}</h3>\r\n                <ProfileStatusHooks status ={props.status} updateStatus = {props.updateStatus} />\r\n                <h3 className=\"personal-info__item\" key = {Math.floor(Math.random()*1000)}>{profile.aboutMe}</h3>\r\n                <h3 className=\"personal-info__item\" key = {Math.floor(Math.random()*1000)}>{profile.lookingForAJob ? 'I am looking for a job' : 'I have a job'}</h3>\r\n                <div className = 'personal-info__item-contacts'>\r\n                   {contacts} \r\n                   \r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default ProfileInfo","import Post from './Post/Post';\r\nimport Pro from './Profile.module.css'\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\n\r\nconst Profile = (props) => { \r\n    \r\n    return (\r\n        <div className={Pro.profile}>\r\n            <ProfileInfo profileInfo = {props.profileInfo} updateStatus = {props.updateStatus} status = {props.status} />\r\n            <Post  addPost = {props.addPost} posts = {props.posts} />    \r\n        </div>   \r\n    );   \r\n}\r\n\r\nexport default Profile","import { profileAPI } from \"../api/api\"\r\n\r\nconst ADD_POST = 'PROFILE/ADD-POST'\r\nconst SET_PROFILE_INFO = 'PROFILE/SET-PROFILE-INFO'\r\nconst GET_STATUS = 'PROFILE/GET-STATUS'\r\n\r\nlet initialState = {\r\n    postUsers: [\r\n        { post: 'Hi girls', id: 1, likes: 23, name: 'Jenya' },\r\n        { post: 'wow man', id: 2, likes: 12, name: 'Jorik' },\r\n        { post: 'How are you', id: 3, likes: 5, name: 'Roma' },\r\n        { post: 'Haha', id: 4, likes: 8, name: 'Masha' },\r\n        { post: 'Haha', id: 5, likes: 3, name: 'Igor' }\r\n    ],\r\n    profileInfo: null,\r\n    isFetching: false,\r\n    status: ''\r\n}\r\n\r\nexport const profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST: \r\n            let newPost = action.newPost\r\n            return {\r\n                ...state,\r\n                postUsers: [...state.postUsers, {post: newPost, id: 6, likes: 0, name: 'Ruslan'}]\r\n            }\r\n        case SET_PROFILE_INFO:\r\n            return {\r\n                ...state, profileInfo: action.profileInfo\r\n            }\r\n        case GET_STATUS:\r\n            return {\r\n                ...state, status: action.status\r\n            }\r\n        default: \r\n            return state\r\n    }\r\n}\r\n\r\nexport const addPostActionCreator = (newPost) => {\r\n    return {\r\n        type: ADD_POST,\r\n        newPost: newPost\r\n    }\r\n}\r\n\r\nexport const setProfileInfoAC = (profileInfo) => {\r\n    return {\r\n        type: SET_PROFILE_INFO,\r\n        profileInfo: profileInfo,\r\n    }\r\n}\r\n\r\nexport const getProfileStatusAC = (status) => {\r\n    return {\r\n        type: GET_STATUS,\r\n        status: status\r\n    }\r\n}\r\n\r\nexport const setProfileInfoThunkCreator = (userID, myProfile) => {\r\n    return async (dispatch) => {\r\n        let showUserByID = userID\r\n        if (!showUserByID) {\r\n            showUserByID = myProfile\r\n        }\r\n        let data = await profileAPI.getProfileInfo(showUserByID)\r\n        dispatch(setProfileInfoAC(data))\r\n    }\r\n}\r\n\r\nexport const getProfileStatusThunkCreator = (userID, myProfile) => {\r\n    return async (dispatch) => {\r\n        let showUserByID = userID\r\n        if (!showUserByID) {\r\n            showUserByID = myProfile\r\n        }\r\n        let data = await profileAPI.getStatus(showUserByID)\r\n        dispatch(getProfileStatusAC(data))\r\n    }\r\n}\r\nexport const updateProfileStatusThunkCreator = (status) => {\r\n    return async (dispatch) => {\r\n        let data = await profileAPI.updateStatus(status)\r\n        if (data.data.resultCode === 0) {\r\n            dispatch(getProfileStatusAC(status))\r\n        }\r\n    }\r\n}\r\n\r\n","import Profile from \"./Profile\";\r\nimport React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { addPostActionCreator, getProfileStatusThunkCreator, setProfileInfoThunkCreator, updateProfileStatusThunkCreator } from \"../../../redux/profile-reducer\";\r\nimport { withRouter } from \"react-router\";\r\nimport { WithAuthRedirect } from \"../../../HOC/WithAuthRedirect\";\r\nimport { compose } from \"redux\";\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        this.props.setProfileInfo(this.props.match.params.userId, this.props.auth.userId)\r\n        this.props.getProfileStatus(this.props.match.params.userId, this.props.auth.userId)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Profile\r\n                    profileInfo={this.props.profileInfo}\r\n                    status={this.props.status}\r\n                    updateStatus={this.props.updateProfileStatus}\r\n                    posts = {this.props.posts}\r\n                    auth = {this.props.auth}\r\n                    addPost = {this.props.addPost}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({    \r\n    profileInfo: state.profileData.profileInfo,\r\n    auth: state.auth,\r\n    status: state.profileData.status,\r\n    posts: state.profileData.postUsers\r\n})\r\n\r\nexport default compose (\r\n    connect(mapStateToProps, {setProfileInfo: setProfileInfoThunkCreator, \r\n        getProfileStatus: getProfileStatusThunkCreator, \r\n        updateProfileStatus: updateProfileStatusThunkCreator,\r\n        addPost: addPostActionCreator,\r\n    }),\r\n    withRouter,\r\n    WithAuthRedirect) (ProfileContainer)\r\n\r\n\r\n\r\n\r\n\r\n// let AuthRedirectComponent = WithAuthRedirect(ProfileContainer)\r\n\r\n// let UrlDataContainer = withRouter(AuthRedirectComponent)\r\n\r\n// export default connect(mapStateToProps, {setProfileInfo: setProfileInfoThunkCreator}) (UrlDataContainer)","import { Route } from 'react-router';\r\nimport './Content.css'\r\nimport FriendsContainer from './Friends/FriendsContainer';\r\nimport LoginContainer from './Login/LoginContainer';\r\nimport MessagesContainer from './Messages/MessagesContainer';\r\nimport ProfileContainer from './Profile/ProfileContainer';\r\n\r\nconst Content = (props) => {\r\n    return (\r\n        <div className=\"content wrapper__content\">\r\n            <Route \r\n                path = '/Content/Profile/:userId?' \r\n                render = { () => <ProfileContainer />}  \r\n            />\r\n            <Route\r\n                path='/Content/Messages'\r\n                render = { () => <MessagesContainer />}\r\n            />   \r\n            <Route\r\n                path='/Content/Friends'\r\n                render={() => <FriendsContainer />}\r\n            />\r\n            <Route\r\n                path='/Content/Login'\r\n                render={() => <LoginContainer />}\r\n            />\r\n        </div>\r\n    );\r\n}\r\nexport default Content","import { NavLink } from 'react-router-dom';\r\nimport logo from '../../Rlogo.png'\r\nimport './Header.css'\r\n\r\nconst Header = (props) => {\r\n    \r\n    return (\r\n        <header className=\"header wrapper__header\">\r\n            <img className=\"logo header__logo\" src={logo} alt=\"logo\" />\r\n            {props.auth.isAuth \r\n            ? <div><span className = {'header__login-login'}>{props.auth.login}</span> <span onClick = {props.logout} className = {'header__login-logout'}>&#10060;</span></div> \r\n            : <NavLink to = '/Content/Login/' className = 'header__login-userName'>{'Login'}</NavLink>}\r\n            \r\n        </header>\r\n    );\r\n}\r\nexport default Header","import React from 'react'\r\nimport './Header.css'\r\nimport Header from './Header'\r\nimport { connect } from 'react-redux'\r\nimport { logout, setUserData} from '../../redux/auth-reducer'\r\n\r\nclass HeaderContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        \r\n        this.props.setUserData(this.props.auth.isAuth)\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Header auth = {this.props.auth} logout = {this.props.logout} />\r\n        )\r\n    }\r\n\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    auth: state.auth\r\n})\r\n\r\n\r\n\r\nexport default connect(mapStateToProps, {setUserData: setUserData, logout: logout}) (HeaderContainer)\r\n","import { NavLink } from 'react-router-dom';\r\nimport './MenuItem.css'\r\n\r\nconst MenuItem = (props) => {\r\n    return (\r\n        <NavLink to = {props.link} className = \"menu-item sidebar__item\">{props.item}</NavLink>\r\n    );\r\n}\r\nexport default MenuItem","import MenuItem from './MenuItem/MenuItem';\r\nimport './Navigation.css'\r\n\r\nconst Navigation = (props) => {\r\n    const menuList = props.navigation.map(elem => {\r\n        return <MenuItem item = {elem} link = {'/Content/' + elem} key = {elem}/>\r\n    })\r\n    \r\n    return (\r\n        <nav className=\"sidebar wrapper__sidebar\">\r\n            {menuList}\r\n        </nav>\r\n    );\r\n}\r\nexport default Navigation","import { connect } from 'react-redux'\r\nimport Navigation from './Navigation'\r\nimport './Navigation.css'\r\n\r\nconst mapPropsToState = (state) => {\r\n    return {\r\n        navigation: state.navigation.navigation\r\n    }\r\n}\r\n\r\nconst NavigationContainer = connect(mapPropsToState, null) (Navigation)\r\n\r\nexport default NavigationContainer","import { setUserData } from \"./auth-reducer\"\r\n\r\nconst SET_INITIALIZED = 'SET-INITIALIZED'\r\n\r\nlet initialState = {\r\n    initialized: false,\r\n}\r\n\r\nexport const initializedReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case SET_INITIALIZED:\r\n            return {\r\n                ...state, \r\n                initialized: true\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const initializedSuccessAC = () => {\r\n    return {\r\n        type: SET_INITIALIZED,\r\n    }\r\n}\r\n\r\nexport const initializeThunkCreator = () => {\r\n    return (dispatch) => {\r\n        let promise = dispatch(setUserData())\r\n        promise.then( () => {\r\n            dispatch(initializedSuccessAC())\r\n        })       \r\n    }\r\n}","let initialState = {\r\n    navigation: ['Profile', 'Messages', 'News', 'Music', 'Friends', 'Settings']\r\n}\r\n\r\nexport const navigationReducer = (state = initialState, action) => {\r\n    return state\r\n}","import { applyMiddleware, combineReducers, compose, createStore } from \"redux\";\r\nimport {profileReducer} from './profile-reducer'\r\nimport {messagesReducer} from './messages-reducer'\r\nimport {navigationReducer} from './navigation-reducer'\r\nimport { friendsReducer } from \"./friends-reducer\";\r\nimport { authReducer } from \"./auth-reducer\";\r\nimport thunkMiddleware  from \"redux-thunk\"\r\nimport { reducer as formReducer } from 'redux-form'\r\nimport { initializedReducer } from \"./app-initial-reducer\";\r\n\r\nlet reducers = combineReducers({\r\n    profileData: profileReducer,\r\n    messagesData: messagesReducer,\r\n    navigation: navigationReducer,\r\n    friendsData: friendsReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: initializedReducer\r\n})\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)));\r\n\r\n// let store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\n// window.store = store\r\n\r\n\r\nexport default store","import React from 'react';\nimport { connect, Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport './App.css';\nimport Preloader from './components/Common/Preloader/Preloader';\nimport Content from './components/Content/Content';\nimport HeaderContainer from './components/Header/HeaderContainer';\nimport NavigationContainer from './components/Navigation/NavigationContainer';\nimport { initializeThunkCreator } from './redux/app-initial-reducer';\nimport store from './redux/redux-store';\n\nclass App extends React.Component {\n  componentDidMount() {\n    this.props.initialize()\n  }\n  \n  render() {\n    if (!this.props.initialized) {\n      return <Preloader />\n    }\n    return (\n      <div className=\"wrapper\">\n        <HeaderContainer />\n        <NavigationContainer />\n        <Content />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  initialized: state.app.initialized\n})\n\nlet AppContainer = connect(mapStateToProps, { initialize: initializeThunkCreator })(App)\n\nconst AppMain = (props) => {\n  return (\n    <BrowserRouter>\n      <Provider store={store}>\n        <AppContainer />\n      </Provider>\n    </BrowserRouter>\n  )\n}\nexport default AppMain\n\n","import reportWebVitals from './reportWebVitals';\nimport React from \"react\";\nimport ReactDOM from 'react-dom';\nimport  AppMain  from \"./App\";\nimport './index.css';\n\nReactDOM.render( <AppMain />, document.getElementById('root') );\n\nreportWebVitals();\n\n\n\n\n\n\n"],"sourceRoot":""}